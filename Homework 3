{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "18428d50-bf88-46e0-b7f9-549b50f4970f",
   "metadata": {},
   "source": [
    "Imports packages"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 151,
   "id": "eabb9af5-48e0-409e-9f2f-282d91f6930a",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cc3108e3-09db-4e7c-bdeb-5472786487b7",
   "metadata": {},
   "source": [
    "Initializes list that holds indices of rows with cancer patient data and list that holds indices of rows with patients that don't have cancer\n",
    "\n",
    "Initializes rowcount variable to find the index of each row\n",
    "\n",
    "Loops through each value in the results column with info about whether the patient has cancer \n",
    "\n",
    "Checks if the value is 0 or 1 (0 being no cancer and 1 being lung cancer)\n",
    "\n",
    "Creates a list for the amount of smokes for each lung cancer patient\n",
    "Loops through each cancer patient index and adds the value at that index to the list \n",
    "\n",
    "Creates a list for the amount of smokes for each patient without lung cancer\n",
    "Loops through each index of patients without cancer and adds the value at that index to the list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 198,
   "id": "7faf5b1f-b9a3-4bac-98e4-3626e0f5bf49",
   "metadata": {},
   "outputs": [],
   "source": [
    "yeslistsmokes = []\n",
    "nolistsmokes = []\n",
    "rowcount = 0\n",
    "for outcome in dataset_1.iloc[:, -1]:\n",
    "    if outcome == 1:\n",
    "        yeslistsmokes.append(rowcount)\n",
    "    else:\n",
    "        nolistsmokes.append(rowcount)\n",
    "    rowcount = rowcount + 1\n",
    "\n",
    "positivecase_smoking = []\n",
    "for yesvalue in yeslist:\n",
    "    positivecase_smoking.append(dataset_1['Smokes'][yesvalue])\n",
    "    \n",
    "negcase_smoking = []\n",
    "for novalue in nolist:\n",
    "    negcase_smoking.append(dataset_1['Smokes'][novalue])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "43d7ff31-8e90-49f1-915e-9be8bb381ce1",
   "metadata": {},
   "source": [
    "Makes a histogram for lung cancer patient data (smokes vs frequency) and labels axes \n",
    "Makes a histogram for patients without lung cancer (smokes vs frequency) and labels axes\n",
    "Creates a key "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "acde5438-d8e6-48f3-b24a-28ad647e822e",
   "metadata": {},
   "outputs": [],
   "source": [
    "plt.hist(positivecase_smoking, label = \"positive cases\")\n",
    "plt.title('lung cancer smoking data')\n",
    "plt.xlabel('Amount of smoking (larger = more)')\n",
    "plt.ylabel('Frequency')\n",
    "\n",
    "plt.hist(negcase_smoking, label = \"negative cases\")\n",
    "plt.xlabel('Amount of smoking (larger = more)')\n",
    "plt.ylabel('Frequency')\n",
    "plt.legend(loc=\"upper left\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "255eacd0-ade1-4990-95c7-d52557056937",
   "metadata": {},
   "source": [
    "Initializes list that holds indices of rows with cancer patient data and list that holds indices of rows with patients that don't have cancer\n",
    "\n",
    "Initializes rowcount variable to find the index of each row\n",
    "\n",
    "Loops through each value in the results column with info about whether the patient has cancer \n",
    "\n",
    "Checks if the value is 0 or 1 (0 being no cancer and 1 being lung cancer)\n",
    "\n",
    "Creates a list for the amount of alcohol for each lung cancer patient\n",
    "Loops through each cancer patient index and adds the value at that index to the list \n",
    "\n",
    "Creates a list for the amount of alcohol for each patient without lung cancer\n",
    "Loops through each index of patients without cancer and adds the value at that index to the list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 200,
   "id": "3a8d34fb-d2f9-473c-812a-b1bc8484086e",
   "metadata": {},
   "outputs": [],
   "source": [
    "yeslistalc = []\n",
    "nolistalc = []\n",
    "rowcount = 0\n",
    "for outcome in dataset_1.iloc[:, -1]:\n",
    "    if outcome == 1:\n",
    "        yeslistalc.append(rowcount)\n",
    "    else:\n",
    "        nolistalc.append(rowcount)\n",
    "    rowcount = rowcount + 1\n",
    "\n",
    "positivecase_alc = []\n",
    "negcase_alc = []\n",
    "for yesvalue in yeslistalc:\n",
    "    positivecase_alc.append(dataset_1['Alkhol'][yesvalue])  \n",
    "for novalue in nolistalc:\n",
    "    negcase_alc.append(dataset_1['Alkhol'][novalue])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d4221265-9be3-4f6b-84e3-73492b31cc3d",
   "metadata": {},
   "source": [
    "Makes a histogram for lung cancer patient data (alcohol vs frequency) and labels axes \n",
    "Makes a histogram for patients without lung cancer (alcohol vs frequency) and labels axes\n",
    "Creates a key "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bf1e57ac-489f-40c6-aada-a2d873432307",
   "metadata": {},
   "outputs": [],
   "source": [
    "plt.hist(positivecase_alc, label = \"positive cases\")\n",
    "plt.title('lung cancer alcohol data')\n",
    "plt.xlabel('Amount of alcohol (larger = more)')\n",
    "plt.ylabel('Frequency')\n",
    "\n",
    "plt.hist(negcase_alc, label = \"negative cases\")\n",
    "plt.xlabel('Amount of alcohol (larger = more)')\n",
    "plt.ylabel('Frequency')\n",
    "plt.legend(loc=\"upper left\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8b5b431e-cb38-4a93-9ccd-aa71c79fcfe8",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
